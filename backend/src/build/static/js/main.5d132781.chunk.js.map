{"version":3,"sources":["assets/img/logo.png","common/context/AppContext.tsx","components/theme-config/ThemeConfigProvider.tsx","components/theme-switcher/ThemeSwitcher.tsx","components/header/Header.tsx","components/footer/Footer.tsx","views/login/Login.view.tsx","layouts/dashboard/Dashboard.layout.tsx","views/about/About.view.tsx","router/RouterApp.tsx","app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","CONTEXT_ACTION_TYPE","ThemeConfigProvider","props","theme","children","basicStyle","clsx","Fragment","className","initialState","version","AppStateContext","createContext","AppDispatchContext","appContextReducer","state","action","type","payload","THEME_TOGGLE","SET_VERSION","Error","AppContextProvider","useReducer","dispatch","Provider","value","useGlobalState","useContext","ThemeSwitcher","status","useState","content","setContent","useEffect","name","xmlns","width","height","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","cx","cy","r","Header","appDispatchContext","setStatus","onClick","prev","Footer","appContext","rel","href","fillRule","target","LoginView","imageLoaded","setImageLoaded","bannerDom","useRef","document","createElement","current","style","opacity","ref","src","logo","onLoad","alt","to","DashboardLayout","AboutView","RouterApp","path","component","exact","from","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5d132781.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.dacc842a.png\";","import React, { FunctionComponent, createContext, useReducer, useContext } from 'react';\r\n\r\nexport interface IAppContextState {\r\n    theme: 'theme-light' | 'theme-dark';\r\n    version: string;\r\n}\r\n\r\nexport enum CONTEXT_ACTION_TYPE {\r\n    THEME_TOGGLE,\r\n    SET_VERSION,\r\n}\r\n\r\nexport const initialState: IAppContextState = {\r\n    theme: 'theme-light',\r\n    version: '1.0.0'\r\n};\r\n\r\nexport const AppStateContext = createContext<IAppContextState>(initialState); // Separate context for storing state\r\nexport const AppDispatchContext = createContext({}); // Separate context for updating state\r\n\r\nconst appContextReducer = (state: IAppContextState, action: {type: CONTEXT_ACTION_TYPE, payload: any}): any => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case CONTEXT_ACTION_TYPE.THEME_TOGGLE:\r\n            if (payload) return {...state, theme: 'theme-dark'};\r\n            else return {...state, theme: 'theme-light'};\r\n        case CONTEXT_ACTION_TYPE.SET_VERSION:\r\n            return { ...state, version: payload};\r\n        default:\r\n            throw new Error(`Unhandled action type: ${type}`);\r\n    }\r\n};\r\n\r\nexport const AppContextProvider: FunctionComponent<any> = ({children}): JSX.Element => {\r\n    const [state, dispatch] = useReducer(appContextReducer, initialState);\r\n    return (<React.Fragment>\r\n            <AppStateContext.Provider value={state}>\r\n                <AppDispatchContext.Provider value={dispatch}>\r\n                    {children}\r\n            </AppDispatchContext.Provider>\r\n            </AppStateContext.Provider>\r\n        </React.Fragment>);\r\n};\r\n\r\n// Custom Hooks\r\nexport const useGlobalState  = () => useContext(AppStateContext);\r\nexport const useGlobalDispatch =  () => useContext(AppDispatchContext);","import React, { FunctionComponent } from 'react';\r\nimport clsx from 'clsx';\r\n\r\ninterface IThemeConfigProps {\r\n    theme: 'theme-light' | 'theme-dark'\r\n}\r\n\r\nconst ThemeConfigProvider: FunctionComponent<IThemeConfigProps> = (props): JSX.Element => {\r\n    const { theme, children } = props;\r\n    const basicCss = `content-wrapper bg-background-primary font-sans text-copy-primary leading-normal flex flex-col min-h-screen`;\r\n    const basicStyle = clsx({ [basicCss]:true, 'theme-light': theme==='theme-light', 'theme-dark':theme === 'theme-dark'});\r\n    return (\r\n        <React.Fragment>\r\n            <div className={basicStyle}>\r\n                {children}\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ThemeConfigProvider;\r\n\r\n","import React, { FunctionComponent, useState, useEffect } from 'react';\r\n\r\ninterface IThemeSwitcherProps {\r\n    status: boolean;\r\n}\r\n\r\nconst ThemeSwitcher: FunctionComponent<IThemeSwitcherProps> = (props): JSX.Element => {\r\n  const { status } = props;\r\n  const [ content, setContent ] = useState<JSX.Element>(<React.Fragment></React.Fragment>);\r\n\r\n  useEffect(()=>{\r\n      if (status) {\r\n          setContent (\r\n              <svg name=\"moon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\"\r\n                   fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"\r\n                   className=\"feather feather-moon\">\r\n                  <path d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\"/>\r\n              </svg>\r\n          );\r\n      } else {\r\n          setContent (\r\n              <svg name=\"sun\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" stroke=\"currentColor\"\r\n                   strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-sun\">\r\n                  <circle cx=\"12\" cy=\"12\" r=\"5\"/>\r\n                  <path\r\n                      d=\"M12 1v2M12 21v2M4.22 4.22l1.42 1.42M18.36 18.36l1.42 1.42M1 12h2M21 12h2M4.22 19.78l1.42-1.42M18.36 5.64l1.42-1.42\"/>\r\n              </svg>\r\n          );\r\n      }\r\n  },[status]);\r\n  return (\r\n      <React.Fragment>\r\n          {content}\r\n      </React.Fragment>\r\n  )\r\n};\r\n\r\nexport default ThemeSwitcher;","import React, {FunctionComponent, useEffect, useState} from 'react';\r\nimport {CONTEXT_ACTION_TYPE, useGlobalDispatch} from \"../../common/context/AppContext\";\r\nimport ThemeSwitcher from \"../theme-switcher/ThemeSwitcher\";\r\n\r\nconst Header: FunctionComponent = (props):JSX.Element => {\r\n    const appDispatchContext: any = useGlobalDispatch();\r\n    const [status, setStatus] = useState<boolean>(false);\r\n    // event handler\r\n    const toggleTheme = () => {\r\n        setStatus(prev => !prev);\r\n    };\r\n    // side-effect\r\n    useEffect(()=>{\r\n        appDispatchContext({\r\n           type: CONTEXT_ACTION_TYPE.THEME_TOGGLE,\r\n           payload: status\r\n        });\r\n\r\n    },[status, appDispatchContext]);\r\n\r\n    return (\r\n      <React.Fragment>\r\n          <header className=\"border-t-14 border-green-600\">\r\n              <nav className=\"container mx-auto flex flex-wrap justify-end items-center py-8\">\r\n                  <button className=\"outline-none focus:outline-none text-copy-primary hover:text-gray-700\" onClick={toggleTheme}>\r\n                      <ThemeSwitcher status={status}/>\r\n                  </button>\r\n              </nav>\r\n          </header>\r\n      </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, {FunctionComponent} from 'react';\r\nimport { FaHeart } from 'react-icons/fa';\r\n\r\n// custom\r\nimport {useGlobalState} from \"../../common/context/AppContext\";\r\n\r\nconst Footer: FunctionComponent = (props): JSX.Element => {\r\n    const appContext = useGlobalState();\r\n    return (\r\n        <React.Fragment>\r\n            <footer className=\"fixed bottom-0 w-full bg-green-600 text-white\">\r\n                <div className=\"container mx-auto flex flex-col lg:flex-row items-center justify-between py-4\">\r\n                    <div className=\"mb-4 lg:mb-0\">\r\n                        <div>version {appContext.version}</div>\r\n                        <div className=\"flex flex-row justify-center items-center\"><FaHeart className=\"mr-2 text-orange-200\"/> from KL - Malaysia, 2020.</div>\r\n                    </div>\r\n                    <ul className=\"flex items-center space-x-8\">\r\n                        <li>\r\n                            <a rel=\"noopener noreferrer\" href=\"mailto:pramod.jingade@gmail.com\" className=\"text-white hover:text-gray-400\">\r\n                                <svg width=\"25\" height=\"20\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path\r\n                                        d=\"M2.5 0h20A2.5 2.5 0 0 1 25 2.5v15a2.5 2.5 0 0 1-2.5 2.5h-20A2.5 2.5 0 0 1 0 17.5v-15C0 1.125 1.125 0 2.5 0zm20 4.225V2.5h-20v1.725l10 5 10-5zm0 2.8l-9.438 4.713a1.25 1.25 0 0 1-1.124 0L2.5 7.025V17.5h20V7.025z\"\r\n                                        fillRule=\"nonzero\"/>\r\n                                </svg>\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a rel=\"noopener noreferrer\" href=\"https://github.com/avj2352/\" target=\"_blank\"\r\n                               className=\"text-white hover:text-gray-400\">\r\n                                <svg width=\"20\" height=\"19\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path\r\n                                        d=\"M10 0c1.814 0 3.487.435 5.02 1.306a9.827 9.827 0 0 1 3.639 3.542A9.33 9.33 0 0 1 20 9.734c0 2.121-.636 4.03-1.908 5.723a9.783 9.783 0 0 1-4.928 3.518c-.234.042-.408.012-.52-.09a.49.49 0 0 1-.17-.38l.006-.969c.005-.621.007-1.19.007-1.705 0-.82-.226-1.42-.677-1.8.495-.05.94-.126 1.335-.228a5.4 5.4 0 0 0 1.223-.494 3.62 3.62 0 0 0 1.055-.843c.282-.334.512-.777.69-1.33.178-.554.267-1.19.267-1.909a3.7 3.7 0 0 0-1.028-2.61c.32-.77.286-1.631-.105-2.586-.243-.076-.594-.03-1.054.14-.46.168-.86.354-1.198.557l-.495.304a9.478 9.478 0 0 0-2.5-.33c-.86 0-1.693.11-2.5.33a11.6 11.6 0 0 0-.553-.342c-.23-.135-.593-.298-1.088-.488-.494-.19-.863-.247-1.106-.171-.391.955-.426 1.816-.105 2.585A3.7 3.7 0 0 0 3.62 9.227c0 .719.089 1.352.267 1.902.178.549.406.993.683 1.33.278.339.627.622 1.048.85a5.4 5.4 0 0 0 1.224.494c.395.102.84.178 1.335.228-.338.305-.551.74-.638 1.306a2.631 2.631 0 0 1-.586.19 3.782 3.782 0 0 1-.742.063c-.287 0-.57-.09-.853-.272a2.256 2.256 0 0 1-.723-.792 2.068 2.068 0 0 0-.631-.66c-.256-.168-.471-.27-.645-.304l-.26-.038c-.182 0-.308.02-.378.057-.07.038-.09.087-.065.146.026.06.065.118.117.178.053.059.109.11.17.152l.09.063c.192.085.38.245.567.482.187.236.324.452.41.646l.13.292c.113.32.304.58.574.78.269.198.56.325.872.38.312.054.614.084.905.088.29.004.532-.01.723-.044l.299-.05c0 .32.002.694.007 1.12l.006.692a.49.49 0 0 1-.17.38c-.112.101-.286.13-.52.089a9.783 9.783 0 0 1-4.928-3.518C.636 13.763 0 11.855 0 9.734a9.33 9.33 0 0 1 1.341-4.886 9.827 9.827 0 0 1 3.64-3.542C6.512.436 8.185 0 10 0zM3.79 13.98c.025-.058-.005-.11-.092-.151-.087-.026-.143-.017-.17.025-.025.06.005.11.092.152.078.05.134.042.17-.025zm.403.432c.06-.043.052-.11-.026-.203-.087-.076-.157-.089-.209-.038-.06.042-.052.11.026.203.087.084.157.097.209.038zm.39.57c.078-.06.078-.14 0-.24-.07-.11-.143-.136-.221-.077-.078.042-.078.118 0 .228.078.11.152.14.221.089zm.547.532c.07-.067.052-.148-.052-.24-.104-.102-.19-.115-.26-.039-.078.068-.061.148.052.241.104.102.19.114.26.038zm.742.317c.026-.093-.03-.16-.169-.203-.13-.033-.213-.004-.247.09-.035.092.021.155.169.19.13.05.213.025.247-.077zm.82.064c0-.11-.073-.157-.22-.14-.14 0-.209.047-.209.14 0 .11.074.156.221.139.14 0 .209-.046.209-.14zm.756-.127c-.017-.093-.096-.131-.234-.114-.14.025-.2.088-.183.19.018.101.096.135.235.101.139-.034.2-.093.182-.177z\"\r\n                                        fillRule=\"nonzero\"/>\r\n                                </svg>\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a rel=\"noopener noreferrer\" href=\"https://twitter.com/avj2352\" target=\"_blank\"\r\n                               className=\"text-white hover:text-gray-400\">\r\n                                <svg width=\"20\" height=\"17\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path\r\n                                        d=\"M19.807 1.943a8.588 8.588 0 0 1-2.036 2.135 11.918 11.918 0 0 1-.465 3.854 12.085 12.085 0 0 1-1.452 3.177 12.426 12.426 0 0 1-2.318 2.691c-.897.78-1.978 1.402-3.243 1.867-1.265.464-2.618.697-4.06.697-2.27 0-4.348-.618-6.233-1.854.293.034.62.051.98.051 1.885 0 3.565-.588 5.04-1.764a3.915 3.915 0 0 1-2.363-.825 4.038 4.038 0 0 1-1.432-2.039c.276.043.532.064.766.064.36 0 .717-.047 1.068-.14A3.982 3.982 0 0 1 1.73 8.43c-.617-.754-.925-1.63-.925-2.627v-.051c.57.324 1.182.498 1.835.524a4.1 4.1 0 0 1-1.32-1.47 4.078 4.078 0 0 1-.49-1.969c0-.75.185-1.445.553-2.084a11.548 11.548 0 0 0 3.702 3.05 11.163 11.163 0 0 0 4.669 1.271c-.067-.324-.1-.639-.1-.946 0-1.142.395-2.116 1.187-2.92C11.632.402 12.589 0 13.712 0c1.173 0 2.161.435 2.966 1.304a7.878 7.878 0 0 0 2.576-.997 3.997 3.997 0 0 1-1.785 2.275 7.98 7.98 0 0 0 2.338-.639z\"\r\n                                        fillRule=\"nonzero\"/>\r\n                                </svg>\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </footer>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React, {FunctionComponent, useState, useRef, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FaGoogle } from \"react-icons/fa\";\r\n// custom\r\nimport logo from './../../assets/img/logo.png';\r\nimport Header from \"../../components/header/Header\";\r\nimport Footer from \"../../components/footer/Footer\";\r\n\r\n\r\nconst LoginView: FunctionComponent = (props): JSX.Element => {\r\n    const [imageLoaded, setImageLoaded] = useState(false);\r\n    const bannerDom = useRef<HTMLDivElement>(document.createElement('div'));\r\n    // event handlers\r\n    const handleLogoLoad = () => {\r\n        setImageLoaded(true);\r\n    };\r\n    // side-effects\r\n    useEffect(()=>{\r\n        if (imageLoaded) {\r\n            bannerDom.current.style.opacity = '1';\r\n        } else {\r\n            bannerDom.current.style.opacity = `0`;\r\n        }\r\n    },[imageLoaded]);\r\n    return (\r\n      <React.Fragment>\r\n          <div className=\"newsletter bg-background-tertiary h-screen\">\r\n              <Header/>\r\n              <div ref={bannerDom} className=\"opacity-0 transition-opacity duration-1000 ease-in-out container-inner mx-auto py-16 pb-8 text-center text-xl\">\r\n                  <div className=\"flex flex-col justify-center items-center w-4/5 mx-auto mb-8\">\r\n                      <img src={logo} onLoad={handleLogoLoad} alt={`logo`} className=\"w-2/3 md:w-1/2 h-auto rounded-lg shadow mb-4\"/>\r\n                      <p className=\"mb-2 text-lg\">Book ▪ Of ▪ Recipes ▪ Easily ▪ Done </p>\r\n                      <p className=\"uppercase font-bold text-lg\">Login to your Account</p>\r\n                          <div className=\"w-full md:w-1/2 flex flex-col justify-center\">\r\n                              <button\r\n                                  className=\"w-full rounded\r\n                                    shadow uppercase bg-gray-400\r\n                                    text-black\r\n                                    text-lg py-3 px-4 tracking-wide shadow\r\n                                    focus:outline-none hover:bg-gray-500 focus:bg-gray-500 z-10 mt-4\">\r\n                                        <span className=\"flex flex-row justify-center items-center\">Continue with<FaGoogle className=\"ml-2\"/></span>\r\n                              </button>\r\n                              <Link to={`/about`}\r\n                                  className=\"mt-4 text-sm no-underline\r\n                                            font-normal hover:text-orange-300\r\n                                            focus:text-orange-300\">\r\n                                  About B.O.R.E.D\r\n                              </Link>\r\n                          </div>\r\n                  </div>\r\n              </div>\r\n              <Footer/>\r\n          </div>\r\n      </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default LoginView;","import React, { FunctionComponent } from 'react';\r\n\r\nconst DashboardLayout: FunctionComponent = (props): JSX.Element => {\r\n    return (\r\n        <React.Fragment>\r\n            DashboardLayout\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default DashboardLayout;","import React, {FunctionComponent, useState, useRef, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// custom\r\nimport logo from './../../assets/img/logo.png';\r\nimport Header from \"../../components/header/Header\";\r\nimport Footer from \"../../components/footer/Footer\";\r\n\r\n\r\nconst AboutView: FunctionComponent = (props): JSX.Element => {\r\n    const [imageLoaded, setImageLoaded] = useState(false);\r\n    const bannerDom = useRef<HTMLDivElement>(document.createElement('div'));\r\n    // event handlers\r\n    const handleLogoLoad = () => {\r\n        setImageLoaded(true);\r\n    };\r\n    // side-effects\r\n    useEffect(()=>{\r\n        if (imageLoaded) {\r\n            bannerDom.current.style.opacity = '1';\r\n        } else {\r\n            bannerDom.current.style.opacity = `0`;\r\n        }\r\n    },[imageLoaded]);\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"newsletter bg-background-tertiary h-screen\">\r\n                <Header/>\r\n                <div ref={bannerDom}\r\n                     className=\"opacity-0 transition-opacity\r\n                        duration-1000 ease-in-out container-inner mx-auto pb-8 text-center text-xl\">\r\n                    <div className=\"flex flex-col justify-start items-center w-full mx-auto mb-8\">\r\n                        <img\r\n                            src={logo}\r\n                            onLoad={handleLogoLoad}\r\n                            alt={`logo`}\r\n                            className=\"w-1/3 h-auto rounded-lg shadow mb-4\"/>\r\n                        <p className=\"uppercase font-bold text-lg\">About B.O.R.E.D</p>\r\n                        <div className=\"flex flex-col justify-start mb-4\">\r\n                            <span className=\"text-left text-sm md:text-lg\">\r\n                                A Progressive Web Application <strong>(PWA)</strong> which comes handy for any\r\n                                one who would like to -\r\n                                <ul className=\"pl-4 list-decimal\">\r\n                                    <li>Create and Store their own recipe in their required format,</li>\r\n                                    <li>Share their created recipe with friends,</li>\r\n                                    <li>Maintain their shopping list of groceries...and more</li>\r\n                                </ul> <br/>\r\n                                It requires no-installation, you can use it completely for free\r\n                                so please share this app!\r\n                            </span>\r\n                            <Link to={`/login`}\r\n                                className=\"mt-8 text-sm no-underline\r\n                                font-normal hover:text-orange-300 focus:text-orange-300\">\r\n                                Back to Login\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Footer/>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AboutView;","import React, { FunctionComponent } from 'react';\r\nimport { HashRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport LoginView from \"../views/login/Login.view\";\r\nimport DashboardLayout from \"../layouts/dashboard/Dashboard.layout\";\r\nimport AboutView from \"../views/about/About.view\";\r\n\r\nconst RouterApp: FunctionComponent = () => {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route path=\"/login\" component={LoginView}/>\r\n                <Route path=\"/about\" component={AboutView}/>\r\n                <Route path=\"/app\" component={DashboardLayout}/>\r\n                <Redirect exact from=\"/\" to=\"/login\" />\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default RouterApp;","import React, { FunctionComponent } from 'react';\nimport ThemeConfigProvider from \"../components/theme-config/ThemeConfigProvider\";\nimport { IAppContextState, useGlobalState } from \"../common/context/AppContext\";\nimport RouterApp from \"../router/RouterApp\";\n\nconst App: FunctionComponent = () => {\n    const appContext: IAppContextState = useGlobalState();\n    return (\n        <ThemeConfigProvider theme={appContext.theme}>\n            <RouterApp/>\n        </ThemeConfigProvider>\n    );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\n// custom\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\nimport {AppContextProvider} from \"./common/context/AppContext\";\n\nReactDOM.render (\n  <React.StrictMode>\n      <AppContextProvider>\n            <App />\n      </AppContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// axios.defaults.baseURL = 'http://localhost:5000'; // Comment for production deployment\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}